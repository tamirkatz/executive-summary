try:
    from typing import TypedDict, NotRequired, Required, Dict, List, Any
except ImportError:
    from typing_extensions import TypedDict, NotRequired, Required, Dict, List, Any
from backend.services.websocket_manager import WebSocketManager

#Define the input state
class InputState(TypedDict, total=False):
    company: Required[str]
    company_url: NotRequired[str]
    user_role: Required[str]
    websocket_manager: NotRequired[WebSocketManager]
    job_id: NotRequired[str]
    

class ResearchState(InputState):
    site_scrape: Dict[str, Any]
    messages: List[Any]
    profile: Dict[str, Any]  # Enriched user profile from UserProfileEnrichmentAgent
    user_interests: Dict[str, Any]  # Inferred user interests from InterestInferenceAgent
    financial_data: Dict[str, Any]
    news_data: Dict[str, Any]
    company_data: Dict[str, Any]
    curated_financial_data: Dict[str, Any]
    curated_news_data: Dict[str, Any]
    curated_company_data: Dict[str, Any]
    strategic_insights: Dict[str, Any]  # Synthesized insights from InsightSynthesizer
    financial_briefing: str
    news_briefing: str
    company_briefing: str
    references: List[str]
    briefings: Dict[str, Any]
    report: str
    generated_queries: List[str]  # Queries generated by QueryGenerationAgent
    query_generation_complete: bool  # Flag indicating query generation is complete
    categorized_queries: Dict[str, List[str]]  # Queries organized by category from Collector
    total_queries: int  # Total number of queries generated
    query_collection_complete: bool  # Flag indicating query collection is complete

default_research_state = {
    "site_scrape": {},
    "messages": [],
    "profile": {},
    "user_interests": {},
    "financial_data": {},
    "news_data": {},
    "company_data": {},
    "curated_financial_data": {},
    "curated_news_data": {},
    "curated_company_data": {},
    "strategic_insights": {},
    "financial_briefing": "",
    "news_briefing": "",
    "company_briefing": "",
    "references": [],
    "briefings": {},
    "report": "",
    "generated_queries": [],
    "query_generation_complete": False,
    "categorized_queries": {},
    "total_queries": 0,
    "query_collection_complete": False
}